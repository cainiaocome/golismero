#!/usr/bin/env python
# -*- coding: utf-8 -*-

__license__ = """
GoLismero 2.0 - The web knife - Copyright (C) 2011-2013

Authors:
  Daniel Garcia Garcia a.k.a cr0hn | cr0hn<@>cr0hn.com
  Mario Vilas | mvilas<@>gmail.com

Golismero project site: https://github.com/cr0hn/golismero/
Golismero project mail: golismero.project<@>gmail.com

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
"""

__all__ = ["SuspiciousURL"]

from .. import UrlVulnerability


__doc__ = """
This type of data store those Urls that can be considered suspicious to be dangerous, for example:

- http://www.my_site.com/**users**/ -> URL with suspicious path.
- http://www.my_site.com/index.jsp? **jsessionid** =.... -> suspicious parameter
- http://www.my_site.com/index.php?id=1 -> no suspicious info

"""

#------------------------------------------------------------------------------
class SuspiciousURL(UrlVulnerability):
    """
    Suspicious URLs that could require manual attention.
    """

    vulnerability_type = "information_disclosure/url_suspicious"


    #----------------------------------------------------------------------
    def __init__(self, url, substring, *argv, **argd):
        """
        Vulnerability.

        :param url: URL where the vulnerability was found.
        :type url: Url

        :param substring: Substring within the URL that causes suspicion.
        :type substring: str

        :param impact: Impact rating.
        :type impact: int

        :param cve: CVE ID.
        :type cve: str

        :param cwe: CVE ID.
        :type cwe: str

        :param risk: Risk rating.
        :type risk: int

        :param severity: Severity rating.
        :type severity: int

        :param references: Reference URLs.
        :type references: list of str
        """

        # Substring property.
        self.__substr = substring

        # Call the superclass constructor.
        super(SuspiciousURL, self).__init__(url, *argv, **argd)


    #----------------------------------------------------------------------
    def __str__(self):
        return str(self.url.url).replace(self.substring, "[%s]" % self.substring)

    def __repr__(self):
        return "<%s url=%s>" % (self.__class__.__name__, str(self))


    #----------------------------------------------------------------------

    @property
    def substring(self):
        """
        Substring that causes suspicion.

        >>> url_disclosure
        <UrlDisclosure url='http://www.my_site.com/path/index.jsp?para1=1&jsessionid=901828392012'>
        >>> url_disclosure.substring
        'jsessionid'


        :return: Matched substring within the URL that causes suspicion.
        :rtype: str
        """
        return self.__substr
